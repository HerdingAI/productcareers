/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/categories": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.categories.id"];
          name?: parameters["rowFilter.categories.name"];
          description?: parameters["rowFilter.categories.description"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["categories"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** categories */
          categories?: definitions["categories"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.categories.id"];
          name?: parameters["rowFilter.categories.name"];
          description?: parameters["rowFilter.categories.description"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.categories.id"];
          name?: parameters["rowFilter.categories.name"];
          description?: parameters["rowFilter.categories.description"];
        };
        body: {
          /** categories */
          categories?: definitions["categories"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/companies": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.companies.id"];
          inserted_at?: parameters["rowFilter.companies.inserted_at"];
          name?: parameters["rowFilter.companies.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["companies"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** companies */
          companies?: definitions["companies"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.companies.id"];
          inserted_at?: parameters["rowFilter.companies.inserted_at"];
          name?: parameters["rowFilter.companies.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.companies.id"];
          inserted_at?: parameters["rowFilter.companies.inserted_at"];
          name?: parameters["rowFilter.companies.name"];
        };
        body: {
          /** companies */
          companies?: definitions["companies"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/countries": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.countries.id"];
          /** Full country name. */
          name?: parameters["rowFilter.countries.name"];
          /** ISO 3166-1 alpha-2 code. */
          iso2?: parameters["rowFilter.countries.iso2"];
          /** ISO 3166-1 alpha-3 code. */
          iso3?: parameters["rowFilter.countries.iso3"];
          /** Local variation of the name. */
          local_name?: parameters["rowFilter.countries.local_name"];
          continent?: parameters["rowFilter.countries.continent"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["countries"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** countries */
          countries?: definitions["countries"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.countries.id"];
          /** Full country name. */
          name?: parameters["rowFilter.countries.name"];
          /** ISO 3166-1 alpha-2 code. */
          iso2?: parameters["rowFilter.countries.iso2"];
          /** ISO 3166-1 alpha-3 code. */
          iso3?: parameters["rowFilter.countries.iso3"];
          /** Local variation of the name. */
          local_name?: parameters["rowFilter.countries.local_name"];
          continent?: parameters["rowFilter.countries.continent"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.countries.id"];
          /** Full country name. */
          name?: parameters["rowFilter.countries.name"];
          /** ISO 3166-1 alpha-2 code. */
          iso2?: parameters["rowFilter.countries.iso2"];
          /** ISO 3166-1 alpha-3 code. */
          iso3?: parameters["rowFilter.countries.iso3"];
          /** Local variation of the name. */
          local_name?: parameters["rowFilter.countries.local_name"];
          continent?: parameters["rowFilter.countries.continent"];
        };
        body: {
          /** countries */
          countries?: definitions["countries"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/departments": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.departments.id"];
          name?: parameters["rowFilter.departments.name"];
          description?: parameters["rowFilter.departments.description"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["departments"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** departments */
          departments?: definitions["departments"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.departments.id"];
          name?: parameters["rowFilter.departments.name"];
          description?: parameters["rowFilter.departments.description"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.departments.id"];
          name?: parameters["rowFilter.departments.name"];
          description?: parameters["rowFilter.departments.description"];
        };
        body: {
          /** departments */
          departments?: definitions["departments"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/fields": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.fields.id"];
          name?: parameters["rowFilter.fields.name"];
          description?: parameters["rowFilter.fields.description"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["fields"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** fields */
          fields?: definitions["fields"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.fields.id"];
          name?: parameters["rowFilter.fields.name"];
          description?: parameters["rowFilter.fields.description"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.fields.id"];
          name?: parameters["rowFilter.fields.name"];
          description?: parameters["rowFilter.fields.description"];
        };
        body: {
          /** fields */
          fields?: definitions["fields"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/job_categories": {
    get: {
      parameters: {
        query: {
          job_id?: parameters["rowFilter.job_categories.job_id"];
          category_id?: parameters["rowFilter.job_categories.category_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["job_categories"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** job_categories */
          job_categories?: definitions["job_categories"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          job_id?: parameters["rowFilter.job_categories.job_id"];
          category_id?: parameters["rowFilter.job_categories.category_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          job_id?: parameters["rowFilter.job_categories.job_id"];
          category_id?: parameters["rowFilter.job_categories.category_id"];
        };
        body: {
          /** job_categories */
          job_categories?: definitions["job_categories"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/jobs": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.jobs.id"];
          company_id?: parameters["rowFilter.jobs.company_id"];
          title?: parameters["rowFilter.jobs.title"];
          description?: parameters["rowFilter.jobs.description"];
          tags?: parameters["rowFilter.jobs.tags"];
          type?: parameters["rowFilter.jobs.type"];
          fts?: parameters["rowFilter.jobs.fts"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["jobs"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** jobs */
          jobs?: definitions["jobs"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.jobs.id"];
          company_id?: parameters["rowFilter.jobs.company_id"];
          title?: parameters["rowFilter.jobs.title"];
          description?: parameters["rowFilter.jobs.description"];
          tags?: parameters["rowFilter.jobs.tags"];
          type?: parameters["rowFilter.jobs.type"];
          fts?: parameters["rowFilter.jobs.fts"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.jobs.id"];
          company_id?: parameters["rowFilter.jobs.company_id"];
          title?: parameters["rowFilter.jobs.title"];
          description?: parameters["rowFilter.jobs.description"];
          tags?: parameters["rowFilter.jobs.tags"];
          type?: parameters["rowFilter.jobs.type"];
          fts?: parameters["rowFilter.jobs.fts"];
        };
        body: {
          /** jobs */
          jobs?: definitions["jobs"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  categories: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    name: string;
    description?: string;
  };
  companies: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    inserted_at: string;
    name?: string;
  };
  countries: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Full country name. */
    name?: string;
    /** ISO 3166-1 alpha-2 code. */
    iso2: string;
    /** ISO 3166-1 alpha-3 code. */
    iso3?: string;
    /** Local variation of the name. */
    local_name?: string;
    continent?:
      | "Africa"
      | "Antarctica"
      | "Asia"
      | "Europe"
      | "Oceania"
      | "North America"
      | "South America";
  };
  departments: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    name: string;
    description?: string;
  };
  fields: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    name: string;
    description?: string;
  };
  job_categories: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `jobs.id`.<fk table='jobs' column='id'/>
     */
    job_id: number;
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `categories.id`.<fk table='categories' column='id'/>
     */
    category_id: number;
  };
  jobs: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Note:
     * This is a Foreign Key to `companies.id`.<fk table='companies' column='id'/>
     */
    company_id: number;
    title: string;
    description: string;
    tags?: string;
    type: "full_time" | "part_time" | "contract" | "internship";
    fts?: string;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** categories */
  "body.categories": definitions["categories"];
  "rowFilter.categories.id": string;
  "rowFilter.categories.name": string;
  "rowFilter.categories.description": string;
  /** companies */
  "body.companies": definitions["companies"];
  "rowFilter.companies.id": string;
  "rowFilter.companies.inserted_at": string;
  "rowFilter.companies.name": string;
  /** countries */
  "body.countries": definitions["countries"];
  "rowFilter.countries.id": string;
  /** Full country name. */
  "rowFilter.countries.name": string;
  /** ISO 3166-1 alpha-2 code. */
  "rowFilter.countries.iso2": string;
  /** ISO 3166-1 alpha-3 code. */
  "rowFilter.countries.iso3": string;
  /** Local variation of the name. */
  "rowFilter.countries.local_name": string;
  "rowFilter.countries.continent": string;
  /** departments */
  "body.departments": definitions["departments"];
  "rowFilter.departments.id": string;
  "rowFilter.departments.name": string;
  "rowFilter.departments.description": string;
  /** fields */
  "body.fields": definitions["fields"];
  "rowFilter.fields.id": string;
  "rowFilter.fields.name": string;
  "rowFilter.fields.description": string;
  /** job_categories */
  "body.job_categories": definitions["job_categories"];
  "rowFilter.job_categories.job_id": string;
  "rowFilter.job_categories.category_id": string;
  /** jobs */
  "body.jobs": definitions["jobs"];
  "rowFilter.jobs.id": string;
  "rowFilter.jobs.company_id": string;
  "rowFilter.jobs.title": string;
  "rowFilter.jobs.description": string;
  "rowFilter.jobs.tags": string;
  "rowFilter.jobs.type": string;
  "rowFilter.jobs.fts": string;
}

export interface operations {}

export interface external {}

export interface Database {
  public: {
    Tables: {
      categories: {
        Row: definitions['categories']
        Insert: definitions['categories']
        Update: Partial<definitions['categories']>
      }
      companies: {
        Row: definitions['companies']
        Insert: definitions['companies']
        Update: Partial<definitions['companies']>
      }
      countries: {
        Row: definitions['countries']
        Insert: definitions['countries']
        Update: Partial<definitions['countries']>
      }
      departments: {
        Row: definitions['departments']
        Insert: definitions['departments']
        Update: Partial<definitions['departments']>
      }
      jobs: {
        Row: definitions['jobs']
        Insert: definitions['jobs']
        Update: Partial<definitions['jobs']>
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      [_ in never]: never
    }
  }
}

// Phase 1: ProductJob interface for enriched PM job data
export interface ProductJob {
  // Core fields (existing compatibility)
  id: number
  title: string
  description: string
  type: "full_time" | "part_time" | "contract" | "internship"
  created_at?: string
  apply_url?: string
  fts?: string  // Full-text search field
  
  // Company information (embedded, no longer needs JOIN)
  company: string
  company_id?: number
  
  // PM-specific fields based on Product Jobs Taxonomy
  // Role Definition
  seniority_level?: string  // IC Track: APM, PM, Senior PM, Staff PM, Principal PM | Management Track: PM Manager, Director, VP, SVP/EVP, CPO
  product_lifecycle_focus?: string  // 0→1, 1→10, 10→100, 100→1000, Turnaround/Revival, Sunset/Migration
  scope_of_ownership?: string  // Single Feature, Product Area, Product Line, Product Suite, Platform, Full Portfolio
  primary_responsibilities?: string  // Discovery & Research, Strategy & Roadmapping, Execution & Delivery, Growth & Experimentation
  strategic_tactical_balance?: string  // Strategy-Heavy (70%+), Balanced (40-60%), Execution-Heavy (70%+)
  
  // Company Context
  company_stage?: string  // Pre-seed, Seed, Series A, Series B, Series C+, Late-stage Private, Pre-IPO, Public
  product_culture_type?: string  // Product-Led (PLG), Sales-Led, Engineering-Led, Design-Led, Data-Driven
  industry_vertical?: string  // FinTech, HealthTech, EdTech, E-commerce, B2B SaaS, Consumer Tech, MarketPlace
  team_size_composition?: string  // Solo PM, Small (2-5 PMs), Medium (6-15 PMs), Large (15+ PMs)
  business_model?: string  // B2B Enterprise, B2B SMB, B2C, B2B2C, Marketplace/Platform, Subscription
  
  // Work Style
  product_methodology?: string  // Agile/Scrum, Kanban, Shape Up, Dual-Track Discovery, Lean Startup
  technical_depth_required?: string  // Non-technical, Technical Familiarity, Technical Proficiency, Engineering Background
  collaboration_model?: string  // Squad/Pod (embedded), Triad (PM-Design-Eng), Matrix Organization
  tools_platforms?: string  // Analytics: Amplitude, Mixpanel | Roadmapping: Productboard, Aha! | Design: Figma
  customer_type?: string  // End Consumer, Prosumer, Developers, SMB, Mid-Market, Enterprise, Government
  
  // Requirements
  domain_expertise?: string  // Payments/FinTech, HIPAA/Healthcare, GDPR/Privacy, AI/ML Models, Marketplaces
  kpi_ownership?: string  // Revenue (ARR/MRR), User Growth (DAU/MAU), Retention/Churn, NPS/CSAT
  reporting_structure?: string  // Reports to: CEO/Founder, CPO, CTO, VP Product, GM Business Unit
  
  // Skills (for tag generation)
  core_pm_skills?: string  // Comma-separated PM skills
  technical_skills?: string  // Comma-separated technical skills
  leadership_skills?: string  // Comma-separated leadership skills
  
  // Logistics
  location_metro?: string  // Primary metro area
  work_arrangement?: string  // On-site Required, Hybrid, Remote-Regional, Remote-Global
  salary_min?: number  // Minimum salary
  salary_max?: number  // Maximum salary
  
  // System fields
  is_currently_active?: boolean
  is_product_job?: boolean
  extraction_confidence?: "high" | "medium" | "low"
}
